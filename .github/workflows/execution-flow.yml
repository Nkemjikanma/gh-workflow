name: Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # if cache hit is not a match, then run npm ci
        run: npm ci

      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # if cache hit is not a match, then run npm ci
        run: npm ci

      - name: Test code
        id: test-id
        run: npm run test

      - name: Upload test report # test report is generated in the vite config
        # ensures that the failure is from the step we want
        if: failure() && ${{ steps.test-id.outcome == 'failure' }} # if step test-id fails, then run
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true' # if cache hit is not a match, then run npm ci
        run: npm ci

      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
    with:
      artifact_name: dist-files
    # you can pass secrets as well but in this case, we haven't specified the secret in github
    # secrets:
    #   some-secret: ${{ secrets.some-secret }}

  deploy-output-from-reusaable: # display output from reusable workflow
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: print reusable output
        run: echo "${{ needs.deploy.outputs.result}}"

  report:
    if: failure()
    needs: [lint, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Output Information
        run: |
          echo "Something went wrong"
          echo "${{ toJSON(github) }}"
